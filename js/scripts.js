// Generated by CoffeeScript 1.6.1
(function() {
  var angle, cabeza, cuerpo, currentLayer, currentSelected, imageCabeza, imageCuerpo, init, insertCabeza, insertCuerpo, layerPersonaje, listenerStat, newangle, rotateLeft, rotateRight, saveToImage, sendBack, sendFront, stagePersonaje;

  currentSelected = null;

  currentLayer = null;

  stagePersonaje = new Kinetic.Stage({
    container: 'personajeCanvas',
    width: 640,
    height: 480
  });

  layerPersonaje = new Kinetic.Layer();

  imageCabeza = new Image();

  imageCuerpo = new Image();

  cabeza = new Kinetic.Image({
    x: 100,
    y: 100,
    height: 200,
    width: 200,
    image: imageCabeza,
    draggable: true,
    offset: [100, 100],
    tipo: 3,
    id: 1
  });

  cuerpo = new Kinetic.Image({
    x: 400,
    y: 100,
    height: 200,
    width: 200,
    image: imageCuerpo,
    draggable: true,
    offset: [100, 100],
    tipo: 4,
    id: 3
  });

  imageCabeza.src = '/php2/jcuervo/img/cabeza-3.png';

  imageCuerpo.src = '/php2/jcuervo/img/cabeza-2.png';

  layerPersonaje.add(cabeza);

  layerPersonaje.add(cuerpo);

  console.log(layerPersonaje);

  stagePersonaje.add(layerPersonaje);

  cabeza.on("mouseover", function() {
    this.setStroke("980d2e");
    this.setStrokeWidth(1);
    return layerPersonaje.draw();
  });

  cabeza.on("mouseout", function() {
    this.setStroke(null);
    this.setStrokeWidth(0);
    return layerPersonaje.draw();
  });

  cabeza.on("click", function() {
    currentSelected = this;
    return currentLayer = layerPersonaje;
  });

  cuerpo.on("mouseover", function() {
    this.setStroke("980d2e");
    this.setStrokeWidth(1);
    return layerPersonaje.draw();
  });

  cuerpo.on("mouseout", function() {
    this.setStroke(null);
    this.setStrokeWidth(0);
    return layerPersonaje.draw();
  });

  cuerpo.on("click", function() {
    currentSelected = this;
    return currentLayer = layerPersonaje;
  });

  var piezas=[];

  init = function() {
    console.log("ok go");
    $('#tab1 div').on('click', insertCabeza);
    $('#tab2 div').on('click', insertCuerpo);
    $('#tab3 div').on('click', insertAccesorio);
    $('#js-toImage').on('click', saveToImage);
    $('#js-listenerStat').on('click', listenerStat);
    $('#js-rotateLeft').on('click', rotateLeft);
    $('#js-rotateRight').on('click', rotateRight);
    $('#js-sendFront').on('click', sendFront);
    $('#remove').on('click', removeImage);
    return $('#js-sendBack').on('click', sendBack);
  };

  insertCabeza = function() {
    var imgUrl;
    imgUrl = $(this).find('img').attr('src');
    console.log(imgUrl);
    pieza = $(this).find('img').attr('id').split("-");
    cabeza.attrs.id=pieza[0];
    cabeza.attrs.tipo=pieza[1];
    console.log("CABEZA id: "+pieza[0]+"tipo: "+pieza[1]);
    imageCabeza.src = imgUrl;
    return layerPersonaje.draw();
  };

  insertCuerpo = function() {
    var imgUrl;
    imgUrl = $(this).find('img').attr('src');
    console.log(imgUrl);
    pieza = $(this).find('img').attr('id').split("-");
    cuerpo.attrs.id=pieza[0];
    cuerpo.attrs.tipo=pieza[1];
    console.log("CUERPO id: "+pieza[0]+"tipo: "+pieza[1]);
    imageCuerpo.src = imgUrl;
    return layerPersonaje.draw();
  };

  insertAccesorio = function() {
    pieza = $(this).find('img').attr('id').split("-");
    var insertar=true;
    for(i=0;i<piezas.length;i++){
      if(piezas[i].attrs.id == pieza[0])
        insertar=false; // !=pieza[0]);
    }
    if(insertar){
      imageAccesorio = new Image();
      accesorio = new Kinetic.Image({
        x: 400,
        y: 100,
        height: 200,
        width: 200,
        image: imageAccesorio,
        draggable: true,
        offset: [100, 100],
        tipo: pieza[1],
        id: pieza[0]
      });

      var imgUrl;
      imgUrl = $(this).find('img').attr('src');
      
      imageAccesorio.src = imgUrl;
      accesorio.on("mouseover", function() {
        this.setStroke("980d2e");
        this.setStrokeWidth(1);
        return layerPersonaje.draw();
      });

      accesorio.on("mouseout", function() {
        this.setStroke(null);
        this.setStrokeWidth(0);
        return layerPersonaje.draw();
      });

      accesorio.on("click", function() {
        currentSelected = this;
        return currentLayer = layerPersonaje;
      });
      console.log(imgUrl);
      console.log("ACCESORIO: id: "+pieza[0]+"tipo: "+pieza[1]);
      layerPersonaje.add(accesorio);
      piezas.push(accesorio);
      layerPersonaje.draw();
      return true;
    }
    
    console.log("NO SE INSERTO");
    return false;
  };

  saveToImage = function() {
    stagePersonaje.toDataURL({
      callback: function(dataUrl) {
        
     $.ajax({
        type: 'POST',
        url: "https://apps.t2omedia.com.mx/php2/jcuervo/index.php/avatars/update/"+iU,
        data: "avatarImg="+dataUrl,
        success: function(data){
           alert(data);
        }
    });

        return window.open(dataUrl);
      }
    });
    return false;
  };

  listenerStat = function() {
    var json = JSON.parse(layerPersonaje.toJSON()); 
    console.log(json.children);
    var avatarJson = { avatar: json.children, edit:1 };

    $.ajax({
      type: 'POST',
      url: "http://localhost/jcuervo/index.php/avatars/UpdatePieza",
      data: avatarJson,
      success: function(data){
          alert(data);
      }
    });
    
    return false;
  };

  angle = 0.174532925;

  newangle = null;

  removeImage = function(){
    //layerPersonaje.remove();
    for(i=0;i<piezas.length;i++){
      if(piezas[i].attrs.id == currentSelected.attrs.id)
        piezas.remove(currentSelected);
    }
    currentSelected.remove();
    currentLayer.draw();
  }

  rotateLeft = function() {
    newangle = currentSelected.getRotation() - angle;
    console.log(newangle);
    console.log(angle);
    currentSelected.transitionTo({
      rotation: newangle,
      duration: 0.5,
      easing: 'ease-out',
      callback: function() {
        return console.log(currentSelected.getRotation());
      }
    });
    currentLayer.draw();
    return false;
  };

  rotateRight = function() {
    newangle = currentSelected.getRotation() + angle;
    console.log(newangle);
    console.log(angle);
    currentSelected.transitionTo({
      rotation: newangle,
      duration: 0.5,
      easing: 'ease-out',
      callback: function() {
        return console.log(currentSelected.getRotation());
      }
    });
    currentLayer.draw();
    return false;
  };

  sendFront = function() {
    currentSelected.moveToTop();
    currentLayer.draw();
    console.log('front');
    return false;
  };

  sendBack = function() {
    currentSelected.moveToBottom();
    currentLayer.draw();
    console.log('back');
    return false;
  };

  $(document).ready(function() {
    $(".tabEngine").easytabs({
      animate: true,
      animationSpeed: 150,
      tabActiveClass: 'selected',
      updateHash: false
    });

    return layerPersonaje.draw();
  });

  $(document).on('ready', init);

}).call(this);
